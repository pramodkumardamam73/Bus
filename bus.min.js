var Bus = {
	delay : 50, 
	functions : new Array(), 
	timer : null, 
	currentTime : 0, 

	/* Measures */ 
	time : {
		mil	: 1, 
		sec : 1000, 
		min : 60000, 
		to : function(unit){
			if(unit=='mil'){
				return Bus.currentTime; 
			}else if(unit=='sec'){
				return Bus.currentTime/1000; 
			}else if(unit=='min'){
				return Bus.currentTime/60000; 
			} return null; 
		} 
	}, 
	add : function(func){
		Bus.functions.push(func); 
	}, 
	start : function(){
		console.log('@Bus started@');
		Bus.timer=setTimeout(Bus.helper,Bus.delay); 
	}, 
	run : function(){
		if(Bus.timer){
			for(i=0;i<Bus.functions.length;i++){
				Bus.functions[i](); 
			} if(Bus.timer){
				Bus.currentTime += Bus.delay; 
				Bus.tcurrentTimeimer=setTimeout(Bus.helper,Bus.delay); 
			} 
		} 
	}, 
	pause : function(){
		clearTimeout(Bus.timer); 
		Bus.timer=null; 
	}, 
	helper : function(){
		Bus.run(); 
	}, 
	at : function(time,func){
		var handle = function(){
			if(Bus.currentTime==time){
				func(); 
			} 
		} 
		Bus.add(handle); 
	}, 
	every : function(time,func){
		var handle = function(){
			if(Bus.currentTime%time==0){
				func(); 
			} 
		} 
		Bus.add(handle); 
	}, 
	from : function(time,func){
		var handle = function(){
			if(Bus.currentTime>time){
				func(); 
			} 
		} 
		Bus.add(handle); 
	}, 
	till : function(time,func){
		var handle = function(){
			if(Bus.currentTime<time){
				func(); 
			} 
		} 
		Bus.add(handle); 
	}, 
	between : function(from,to,func){
		var handle = function(){
			if(Bus.currentTime>from && Bus.currentTime<to){
				func(); 
			} 
		} 
		Bus.add(handle); 
	} 
}